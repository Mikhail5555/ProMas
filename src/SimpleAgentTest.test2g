use SimpleAgentProtoss as mas.
use ProtossNexus.ProtossNexus as knowledge.
use ProtossNexus.ProtossNexus as module.
timeout=300. % 5 minutes; shorten this for quicker testing of earlier stars

% This test performs checks to see if a star is (likely) obtained by the agent team.
% A failure of a specific condition indicates which star you failed to achieve; 
% if a condition is not listed in the test results as failed, you passed that specific criteria.
% Be aware: this is not fully incremental, nor does it check percept handling and things like comments or hardcoding.
test ProtossNexus with
	in{ 
		%%% Star 1 %%%
		% Check if some worker is carrying minerals at some point.
		eventually bel(friendly(Type,_,Conditions), member(Type,['Protoss Probe']), 
						member(carrying,Conditions)).
		%%% Star 2 %%%
		% Check if we trained at least 3 more workers (on top of the initial 4).
		% For Zerg we also count the buildings a worker could have morphed into already.
		eventually bel(aggregate_all(count,(friendly(Type,ID,_), member(Type,['Protoss Probe'])),L), 
						L >= 7).
		%%% Star 3 %%%
		% Check if we obtained at least 100 gas.
		eventually percept(resources(_,Gas,_,_), Gas >= 100).
		% Check if we trained at least 4 more workers again (on top of the initial 7 we should have had for star 2).
		% Some Zerg drones should have morphed into the mentioned buildings at this point.  
		eventually bel(aggregate_all(count,(friendly(Type,ID,_), member(Type,['Protoss Probe'])),L), 
						L >= 11).
		%%% Star 4 %%%
		% Check if we built sufficient offensive units (depening on the race).
		eventually bel( (aggregate_all(count,friendly('Protoss Zealot',ID,_),L), L >= 7)).
		%%% Star 5 %%%
		% Cannot test here: be as quick as possible with all the above :)
		
		
		% Our own tests
		eventually percept("Protoss Probe").
		eventually percept("Protoss Pylon").
		eventually percept("Protoss Assimilator").
		eventually percept("Protoss Forge").
		eventually percept("Protoss Nexus").
		eventually percept("Protoss Gateway").
		eventually percept("Protoss Zealot").
		eventually percept("Protoss Stargate").
		eventually percept("Protoss Cybernetics Core").
		
		eventually percept(resources(Minerals, _, _, _), Minerals >= 50).
		eventually percept(resources(Minerals, _, _, _), Minerals >= 100).
		eventually percept(resources(Minerals, _, _, _), Minerals >= 150).

		%percept(mineralField(Id,Amount,Group,X,Y)) leadsto insert(mineralField(Id,Amount,Group,X,Y)).
		
		
	}

mainBase {
	do ProtossNexus.
}