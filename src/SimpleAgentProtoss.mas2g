use "StarCraft Connector.jar" as environment with
	map="(2)Destination.scx",
	own_race="Protoss",
	starcraft_location="C:\Starcraft",
	auto_menu="Single_Player",
	enemy_race="random",
	debug="true", % launch the developer tool
	invulnerable="true", % individual assignment only
	game_speed=50. % default tournament speed


% Define the Manager
define manager as agent {
	use Manager.Manager as main module.
}

% DO NOT REMOVE OR CHANGE THIS AGENT DEFINITION
% Defines an agent for the player's main base
define mainBase as agent {
	use ProtossNexus.ProtossNexus as main module.
	use ProtossNexus.ProtossNexusInit as init module.
	use ProtossNexus.ProtossNexusEvent as event module.
}

% Define a worker drone agent
define protossProbe as agent {
	use ProtossProbe.ProtossProbe as main module.
	use ProtossProbe.ProtossProbeInit as init module.
	use ProtossProbe.ProtossProbeEvent as event module.
} 

define protossForge as agent {
	use ProtossForge.ProtossForge as main module.
	use ProtossForge.ProtossForgeInit as init module.
	use ProtossForge.ProtossForgeEvent as event module.
}

define protossGateway as agent {
	use protossGateway.protossGateway as main module.
	use protossGateway.protossGatewayInit as init module.
	use protossGateway.protossGatewayEvent as event module.
}

launchpolicy{
	% Launch the manager
	when type = manager launch manager.
	
	% Launch an agent for the main base
	when type = protossNexus launch mainBase.
	
	% Launch a probe agent for each worker
	when type = protossProbe launch protossProbe.
	
	%Launch a ForgeAgent for each forge.
	when type = protossForge launch protossForge.
	
	% Launch a GatewayAgent for each gateway
	when type = protossGateway launch protossGateway.
}