use "StarCraft Connector.jar" as environment with
	starcraft_location="C:\Starcraft",
%   map="(4)Circuit Breaker.scx",
    map="(2)Destination.scx",
	own_race="Protoss",
	auto_menu="Single_Player",
	enemy_race="Protoss",
	debug="true", % launch the developer tool
	invulnerable="false", % individual assignment only
	game_speed=50. % default tournament speed

%Define the Manager
define manager as agent {
	use Manager.Manager as main module.
}

% Defines an agent for the player's main base
define mainBase as agent {
	use ProtossNexus.ProtossNexus as main module.
	use ProtossNexus.ProtossNexusInit as init module.
	use ProtossNexus.ProtossNexusEvent as event module.
}

% Define a worker drone agent
define protossProbe as agent {
	use ProtossProbe.ProtossProbe as main module.
	use ProtossProbe.ProtossProbeInit as init module.
	use ProtossProbe.ProtossProbeEvent as event module.
} 

% Define a zealot agent
define protossZealot as agent {
	use ProtossZealot.ProtossZealot as main module.
	use ProtossZealot.ProtossZealotInit as init module.
	use ProtossZealot.ProtossZealotEvents as event module.
}

% Define a Forge as agent
define protossForge as agent {
	use ProtossForge.ProtossForge as main module.
	use ProtossForge.ProtossForgeInit as init module.
	use ProtossForge.ProtossForgeEvent as event module.
}

% Define a Gateway as agent
define protossGateway as agent {
	use protossGateway.protossGateway as main module.
	use protossGateway.protossGatewayInit as init module.
	use protossGateway.protossGatewayEvent as event module.
}

% Define a CyberneticsCore as agent
define protossCyberneticsCore as agent {
	use protossCyberneticsCore.protossCyberneticsCore as main module.
	use protossCyberneticsCore.protossCyberneticsCoreInit as init module.
	use protossCyberneticsCore.protossCyberneticsCoreEvent as event module.
}

% Define a Stargate as agentﬂ
define protossStargate as agent {
	use protossStargate.protossStargate as main module.
	use protossStargate.protossStargateInit as init module.
	use protossStargate.protossStargateEvent as event module.
}

launchpolicy{
	% Launch the manager
	when type = manager launch manager.
	
	% Launch an agent for the main base
	when type = protossNexus launch mainBase.
	
	% Launch a probe agent for each worker
	when type = protossProbe launch protossProbe.
	
	% Launch a ForgeAgent for each forge.
	when type = protossForge launch protossForge.

  	% Launch a zealot agent
	when type = protossZealot launch protossZealot.

	% Launch a GatewayAgent for each gateway
	when type = protossGateway launch protossGateway.
	
	% Launch a CyberneticsCoreAgent for each CyberneticsCore
	when type = protossCyberneticsCore launch protossCyberneticsCore.
	
	% Launch a StargateAgent for each Stargate.
	when type = protossStargate launch protossStargate.
}